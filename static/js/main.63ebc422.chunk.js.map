{"version":3,"sources":["theme.ts","modules/components/header/header.tsx","modules/components/event-form-modal/event-form-modal.tsx","modules/screens/calender/calender.tsx","modules/screens/full-page-error-fallback/full-page-error-fallback.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","createMuiTheme","typography","fontFamily","useStyles","makeStyles","header","marginBottom","spacing","title","flexGrow","marginRight","Header","onAddClick","classes","AppBar","className","position","Toolbar","Typography","variant","Button","onClick","color","startIcon","backgroundColor","height","paddingLeft","paddingRight","display","alignItems","justifyContent","paper","width","padding","EventFormModal","onModalClose","addEvent","closeModal","selectedSlot","useState","isEventAllday","setIsEventAllday","start","end","description","useForm","defaultValues","moment","format","register","handleSubmit","errors","Modal","open","onClose","aria-labelledby","aria-describedby","Paper","component","onSubmit","formData","console","log","elevation","IconButton","Grid","container","item","xs","TextField","size","autoFocus","fullWidth","inputRef","required","id","name","label","message","multiline","rows","Switch","checked","onChange","prevState","inputProps","type","InputLabelProps","shrink","localizer","momentLocalizer","Calender","events","setEvents","setSelectedSlot","openModal","setOpenModal","handleSlotClick","slot","selectable","startAccessor","endAccessor","style","onSelectEvent","onSelectSlot","undefined","event","prevEvents","FullPageErrorFallback","error","role","App","Suspense","fallback","ThemeProvider","CssBaseline","FallbackComponent","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63ebc422.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n\ttypography: {\n\t\tfontFamily: 'Nova mono, monospace'\n\t}\n})\n\nexport default theme\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport {AppBar, Toolbar, Typography, Button} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\n\nconst useStyles = makeStyles(theme => ({\n\theader: {\n\t\tmarginBottom: theme.spacing(3),\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\t'menu-button': {\n\t\tmarginRight: theme.spacing(2),\n\t},\n}))\n\nconst Header = ({onAddClick}) => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<AppBar className={classes.header} position='static'>\n\t\t\t<Toolbar>\n\t\t\t\t<Typography variant='h6' className={classes.title}>\n\t\t\t\t\tChrist Embassy Organizer\n\t\t\t\t</Typography>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={onAddClick}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tstartIcon={<AddIcon />}\n\t\t\t\t>\n\t\t\t\t\tAdd Event\n\t\t\t\t</Button>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t)\n}\n\nexport default Header\n","import React, {useState} from 'react'\nimport {useForm} from 'react-hook-form'\nimport {\n\tModal,\n\tPaper,\n\tGrid,\n\tAppBar,\n\tToolbar,\n\tIconButton,\n\tTypography,\n\tTextField,\n\tSwitch,\n\tButton,\n} from '@material-ui/core'\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded'\nimport moment from 'moment'\n\nimport {makeStyles} from '@material-ui/core/styles'\nconst useStyles = makeStyles(theme => ({\n\t'calender-container': {\n\t\tbackgroundColor: '#FAF8F8',\n\t\theight: '100vh',\n\t},\n\t'calender-content': {\n\t\tpaddingLeft: theme.spacing(5),\n\t\tpaddingRight: theme.spacing(5),\n\t},\n\t'event-form-modal': {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t},\n\tpaper: {\n\t\theight: '40em',\n\t\twidth: '40em',\n\t},\n\t'modal-header': {\n\t\tflexGrow: 1,\n\t},\n\t'modal-form': {\n\t\tpadding: theme.spacing(1),\n\t},\n}))\nconst EventFormModal = ({onModalClose, addEvent, closeModal, selectedSlot}) => {\n\tconst classes = useStyles()\n\tconst [isEventAllday, setIsEventAllday] = useState(!selectedSlot)\n\tconst {title, start, end, description} = selectedSlot ?? {}\n\tconst {register, handleSubmit, errors} = useForm({\n\t\tdefaultValues: {\n\t\t\ttitle,\n\t\t\tstart: moment(start).format('YYYY-MM-DD[T]HH:mm:ss'),\n\t\t\tend: moment(end).format('YYYY-MM-DD[T]HH:mm:ss'),\n\t\t\tdescription,\n\t\t},\n\t})\n\n\tconst onSubmit = formData => {\n\t\tconsole.log(formData)\n\t\taddEvent(formData)\n\t\tcloseModal()\n\t}\n\n\treturn (\n\t\t<Modal\n\t\t\topen\n\t\t\tonClose={onModalClose}\n\t\t\tclassName={classes['event-form-modal']}\n\t\t\taria-labelledby='event-form-modal'\n\t\t\taria-describedby='event-form'\n\t\t>\n\t\t\t<Paper\n\t\t\t\tcomponent='form'\n\t\t\t\tonSubmit={handleSubmit(onSubmit)}\n\t\t\t\tclassName={classes.paper}\n\t\t\t>\n\t\t\t\t<AppBar color='transparent' elevation={0} position='static'>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tclassName={classes['modal-header']}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tvariant='h5'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Event\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<IconButton color='primary' onClick={closeModal}>\n\t\t\t\t\t\t\t<CloseRoundedIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t<Grid className={classes['modal-form']} container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tinputRef={register({required: 'Event title is required'})}\n\t\t\t\t\t\t\tid='title'\n\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{errors.title && (\n\t\t\t\t\t\t\t<Typography color='error' variant='caption'>\n\t\t\t\t\t\t\t\t{errors.title.message}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\trows={10}\n\t\t\t\t\t\t\tinputRef={register()}\n\t\t\t\t\t\t\tid='description'\n\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography component='div' variant='body1'>\n\t\t\t\t\t\t\t<Grid component='label' container alignItems='center' spacing={1}>\n\t\t\t\t\t\t\t\t<Grid item>All day: No</Grid>\n\t\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\t\tchecked={isEventAllday}\n\t\t\t\t\t\t\t\t\tinputRef={register()}\n\t\t\t\t\t\t\t\t\tonChange={() => setIsEventAllday(prevState => !prevState)}\n\t\t\t\t\t\t\t\t\tname='allday'\n\t\t\t\t\t\t\t\t\tinputProps={{'aria-label': 'allday checkbox'}}\n\t\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Grid item>Yes</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid='start'\n\t\t\t\t\t\tname='start'\n\t\t\t\t\t\tlabel='Start'\n\t\t\t\t\t\ttype='datetime-local'\n\t\t\t\t\t\tinputRef={register()}\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{!isEventAllday && (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid='end'\n\t\t\t\t\t\t\tname='end'\n\t\t\t\t\t\t\tlabel='End'\n\t\t\t\t\t\t\ttype='datetime-local'\n\t\t\t\t\t\t\tinputRef={register()}\n\t\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Button color='primary' variant='contained' type='submit' fullWidth>\n\t\t\t\t\t\t\tsubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Paper>\n\t\t</Modal>\n\t)\n}\n\nexport default EventFormModal\n","import React, {useState} from 'react'\nimport {Calendar as BigReactCalender, momentLocalizer} from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\n\nimport {makeStyles} from '@material-ui/core/styles'\nimport {EventFormModal, Header} from 'modules/components'\n\nconst localizer = momentLocalizer(moment)\n\nconst useStyles = makeStyles(theme => ({\n\t'calender-container': {\n\t\tbackgroundColor: '#FAF8F8',\n\t\theight: '100vh',\n\t},\n\t'calender-content': {\n\t\tpaddingLeft: theme.spacing(5),\n\t\tpaddingRight: theme.spacing(5),\n\t},\n}))\n\nconst Calender = () => {\n\tconst classes = useStyles()\n\tconst [events, setEvents] = useState<any>([])\n\tconst [selectedSlot, setSelectedSlot] = useState<any>()\n\tconst [openModal, setOpenModal] = useState(false)\n\n\tconst handleSlotClick = slot => {\n\t\tsetSelectedSlot(slot)\n\t\tsetOpenModal(true)\n\t}\n\n\treturn (\n\t\t<div className={classes['calender-container']}>\n\t\t\t<Header onAddClick={() => setOpenModal(true)} />\n\t\t\t<div className={classes['calender-content']}>\n\t\t\t\t<BigReactCalender\n\t\t\t\t\tlocalizer={localizer}\n\t\t\t\t\tevents={events}\n\t\t\t\t\tselectable\n\t\t\t\t\tstartAccessor='start'\n\t\t\t\t\tendAccessor='end'\n\t\t\t\t\tstyle={{height: '85vh'}}\n\t\t\t\t\tonSelectEvent={handleSlotClick}\n\t\t\t\t\tonSelectSlot={handleSlotClick}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{openModal && (\n\t\t\t\t<EventFormModal\n\t\t\t\t\tselectedSlot={selectedSlot}\n\t\t\t\t\tonModalClose={() => setSelectedSlot(undefined)}\n\t\t\t\t\tcloseModal={() => {\n\t\t\t\t\t\tsetSelectedSlot(undefined)\n\t\t\t\t\t\tsetOpenModal(false)\n\t\t\t\t\t}}\n\t\t\t\t\taddEvent={event => setEvents(prevEvents => [...prevEvents, event])}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default Calender\n","import React from 'react'\n// import {makeStyles} from '@material-ui/core/styles'\n// import {Grid} from '@material-ui/core'\n\n// const useStyles = makeStyles(() => ({\n// \t'calender-container': {\n// \t\tbackgroundColor: '#FAF8F8',\n// \t},\n// }))\n\nfunction FullPageErrorFallback({error}: any) {\n\t// const classes = useStyles()\n\treturn (\n\t\t<div role='alert'>\n\t\t\t<p>Uh oh... There's a problem. Try refreshing the app.</p>\n\t\t\t<pre>{error.message}</pre>\n\t\t</div>\n\t)\n}\n\nexport default FullPageErrorFallback\n","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport {ErrorBoundary} from 'react-error-boundary'\nimport {ThemeProvider} from '@material-ui/core/styles'\nimport {CssBaseline} from '@material-ui/core'\nimport theme from './theme'\n\nimport Calender from 'modules/screens/calender/calender'\nimport FullPageErrorFallback from 'modules/screens/full-page-error-fallback/full-page-error-fallback'\n\n// const Calender = React.lazy(() => import('modules/screens/calender/calender'))\n\n// const FullPageErrorFallback = React.lazy(\n// \t() =>\n// \t\timport('modules/screens/full-page-error-fallback/full-page-error-fallback'),\n// )\n\nfunction App() {\n\treturn (\n\t\t<React.Suspense fallback={<div>Loading...</div>}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<ErrorBoundary FallbackComponent={FullPageErrorFallback}>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<Route path='/' component={Calender} />\n\t\t\t\t\t</Router>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</ThemeProvider>\n\t\t</React.Suspense>\n\t)\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}